GraphQL Cheat Sheet for Developers
1Ô∏è‚É£ Basics ‚Äì What is GraphQL?

GraphQL is a query language for APIs.

Lets clients ask for exactly the data they need.

Single endpoint (/graphql) instead of multiple REST endpoints.

2Ô∏è‚É£ Core Concepts

Schema ‚Üí Defines types & available queries.

Types:

Query ‚Üí Read data.

Mutation ‚Üí Modify data.

Subscription ‚Üí Real-time data (via WebSockets).

Resolvers ‚Üí Functions that fetch the actual data for fields.

3Ô∏è‚É£ Example Schema
type Weather {
  temperature: String
  wind: String
  description: String
  forecast: [Forecast]
}

type Forecast {
  day: String
  temperature: String
  wind: String
}

type Query {
  getWeather(city: String!): Weather
}

4Ô∏è‚É£ Example Query
query {
  getWeather(city: "London") {
    temperature
    wind
    description
  }
}


üìå Only returns the requested fields.

5Ô∏è‚É£ Example Resolver (Node.js)
const resolvers = {
  Query: {
    getWeather: async (_, { city }) => {
      const response = await fetch(`https://api.weatherapi.com/v1/current.json?key=API_KEY&q=${city}`);
      const data = await response.json();
      return {
        temperature: data.current.temp_c,
        wind: data.current.wind_kph,
        description: data.current.condition.text,
      };
    },
  },
};

6Ô∏è‚É£ GraphQL vs REST
Feature	REST üåê	GraphQL ‚ö°
Endpoints	Multiple	Single (/graphql)
Data Fetching	Fixed response	Ask for exact fields
Over-fetching	Common	None
Real-time Updates	Harder	Subscriptions
7Ô∏è‚É£ Running GraphQL Server (Node.js)
node index.js


If you install nodemon, you can auto-restart on file changes:

npm install -g nodemon
nodemon index.js

8Ô∏è‚É£ GraphQL in Java

Use GraphQL Java library.

Similar concepts: schema + resolvers.

Integrated with Spring Boot using graphql-spring-boot-starter.

9Ô∏è‚É£ Developer Tips

Start with schema ‚Üí then resolvers.

Use GraphQL Playground / Apollo Studio for testing.

Keep resolvers clean ‚Äî delegate data fetching to services.

Use caching (e.g., Apollo Client) for performance.